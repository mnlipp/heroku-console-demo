apply plugin: 'eclipse'
    
eclipse {
    classpath {
		minusConfigurations += configurations.findAll { it.name != 'apiElements' \
			&& it.name != 'implementation' && it.name != 'runtimeElements' \
			&& it.name != 'runtimeOnly' && it.name != 'testImplementation' \
			&& it.name != 'testRuntimeOnly' }
        // 'org.eclipse.buildship.core.gradleclasspathcontainer',
        containers 'aQute.bnd.classpath.container'
		defaultOutputDir = file('bin')
        downloadJavadoc = true
        downloadSources = true
		
		file {
			whenMerged {
				// use default Output for all source-folders. see also defaultOutputDir per project
				entries.each { source ->
					if (source.kind == 'src' && !source.path.startsWith('/')) { 
						// only Source-folders in the project starting with 
						// '/' are project-references
						source.output = null
					}
				}.removeAll {
					// Resources have special handling with bnd container
					it.kind == 'src' && it.path == 'resources'
				}
			}
        }
    }
    project {
        buildCommand 'org.eclipse.jdt.core.javabuilder'
        // buildCommand 'org.eclipse.buildship.core.gradleprojectbuilder'
        buildCommand 'bndtools.core.bndbuilder'
        buildCommand 'net.sf.eclipsecs.core.CheckstyleBuilder'
        // 'org.eclipse.buildship.core.gradleprojectnature',
        natures 'org.eclipse.jdt.core.javanature', \
            'bndtools.core.bndnature', \
            'net.sf.eclipsecs.core.CheckstyleNature'
    }
    jdt {
        if (project.name.startsWith("org.jgrapes.")) {
            sourceCompatibility = 1.8
            targetCompatibility = 1.8
            javaRuntimeName = "JavaSE-1.8"
        }
        file {
            withProperties { properties ->
                def formatterPrefs = new Properties()
                rootProject.file("gradle/org.eclipse.jdt.core.formatter.prefs")
                    .withInputStream { formatterPrefs.load(it) }
                properties.putAll(formatterPrefs)
            }
        }
    }
}
tasks.eclipse.dependsOn(cleanEclipse)
